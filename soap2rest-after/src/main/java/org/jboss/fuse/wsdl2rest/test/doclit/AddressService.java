package org.jboss.fuse.wsdl2rest.test.doclit;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.11.fuse-000243-redhat-1
 * 2018-09-11T13:01:08.514-04:00
 * Generated source version: 3.1.11.fuse-000243-redhat-1
 * 
 */
@WebServiceClient(name = "AddressService", 
                  wsdlLocation = "file:/Users/kcbabo/Desktop/Address.wsdl",
                  targetNamespace = "http://doclit.test.wsdl2rest.fuse.jboss.org/") 
public class AddressService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://doclit.test.wsdl2rest.fuse.jboss.org/", "AddressService");
    public final static QName AddressPort = new QName("http://doclit.test.wsdl2rest.fuse.jboss.org/", "AddressPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/Users/kcbabo/Desktop/Address.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(AddressService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/Users/kcbabo/Desktop/Address.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public AddressService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public AddressService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AddressService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public AddressService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public AddressService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public AddressService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns Address
     */
    @WebEndpoint(name = "AddressPort")
    public Address getAddressPort() {
        return super.getPort(AddressPort, Address.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Address
     */
    @WebEndpoint(name = "AddressPort")
    public Address getAddressPort(WebServiceFeature... features) {
        return super.getPort(AddressPort, Address.class, features);
    }

}
